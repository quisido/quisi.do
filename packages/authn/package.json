{
  "name": "@quisido/authn",
  "license": "UNLICENSED",
  "private": true,
  "type": "module",
  "version": "1.0.0",
  "scripts": {
    "build": "exit 0",
    "clean": "rimraf .wrangler coverage",
    "dev": "wrangler dev --persist-to ../../.wrangler/state",
    "eslint": "eslint . --cache --color --exit-on-fatal-error --max-warnings 0",
    "eslint:fix": "eslint . --cache --color --exit-on-fatal-error --fix --max-warnings 0",
    "local:delete": "wrangler d1 execute authn-dev --file=./sql/delete.sql --local --persist-to ../../.wrangler/state",
    "local:drop": "wrangler d1 execute authn-dev --file=./sql/drop.sql --local --persist-to ../../.wrangler/state",
    "local:init": "npm run local:init:emails && npm run local:init:oauth && npm run local:init:users && npm run local:delete",
    "local:init:emails": "wrangler d1 execute authn-dev --file=./sql/emails.sql --local --persist-to ../../.wrangler/state",
    "local:init:oauth": "wrangler d1 execute authn-dev --file=./sql/oauth.sql --local --persist-to ../../.wrangler/state",
    "local:init:users": "wrangler d1 execute authn-dev --file=./sql/users.sql --local --persist-to ../../.wrangler/state",
    "local:reinit": "npm run local:drop && npm run local:init",
    "login": "wrangler login",
    "production:deploy": "wrangler deploy src/index.ts --env production --outdir dist",
    "production:deploy:dry-run": "wrangler deploy src/index.ts --dry-run --env production --outdir dist",
    "production:init": "npm run production:init:emails && npm run production:init:oauth && npm run production:init:users",
    "production:init:emails": "wrangler d1 execute authn --env production --file=./sql/emails.sql --remote",
    "production:init:oauth": "wrangler d1 execute authn --env production --file=./sql/oauth.sql --remote",
    "production:init:users": "wrangler d1 execute authn --env production --file=./sql/users.sql --remote",
    "publint": "publint",
    "staging:deploy": "wrangler deploy src/index.ts --env staging --outdir dist --remote",
    "staging:deploy:dry-run": "wrangler deploy src/index.ts --dry-run --env staging --outdir dist --remote",
    "staging:init": "npm run staging:init:emails && npm run staging:init:oauth && npm run staging:init:users",
    "staging:init:emails": "wrangler d1 execute authn-staging --env staging --file=./sql/emails.sql --remote",
    "staging:init:oauth": "wrangler d1 execute authn-staging --env staging --file=./sql/oauth.sql --remote",
    "staging:init:users": "wrangler d1 execute authn-staging --env staging --file=./sql/users.sql --remote",
    "test": "concurrently --names eslint,publint,tsc,vitest --prefix-colors auto \"npm run eslint\" \"npm run publint\" \"npm run tsc\" \"npm run vitest:run\"",
    "tsc": "tsc --skipLibCheck",
    "tsc:no-emit": "tsc --noEmit --skipLibCheck",
    "vitest": "vitest",
    "vitest:run": "vitest run",
    "whoami": "wrangler whoami"
  },
  "dependencies": {
    "@quisido/authn-shared": "^1.1.5",
    "@quisido/worker": "^1.0.7",
    "cloudflare-utils": "^1.0.3",
    "fmrs": "^2.0.4",
    "form-urlencoded": "^6.1.5",
    "tslib": "^2.8.1"
  },
  "devDependencies": {
    "@cloudflare/workers-types": "^4.20250523.0",
    "@microsoft/eslint-formatter-sarif": "^3.1.0",
    "@quisido/eslint-config": "^1.1.6",
    "@quisido/vitest-config": "^1.0.2",
    "@quisido/worker-test": "^1.0.1",
    "@types/cookie": "^1.0.0",
    "@types/eslint": "^9.6.1",
    "@vitest/coverage-istanbul": "^3.1.4",
    "cjs-ts": "^2.0.0",
    "cloudflare-test-utils": "^1.0.2",
    "concurrently": "^9.1.2",
    "cookie": "^1.0.2",
    "eslint": "^9.27.0",
    "publint": "^0.3.12",
    "rimraf": "^6.0.1",
    "typescript": "^5.8.3",
    "vite": "^6.3.5",
    "vitest": "^3.1.4",
    "wrangler": "^4.16.1"
  }
}
